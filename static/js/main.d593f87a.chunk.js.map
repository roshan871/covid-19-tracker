{"version":3,"sources":["InfoBox.js","Map.js","Table.js","util.js","LineGraph.js","App.js","index.js"],"names":["InfoBox","title","cases","total","Card","className","CardContent","Typography","color","Map","Table","countries","map","country","sortData","data","sortedData","sort","a","b","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","numeral","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","LineGraph","casesType","useState","setData","buildChartData","lastDataPoint","chartData","date","newDataPoint","x","y","push","useEffect","fetch","then","response","json","console","log","fetchData","length","datasets","backgroundColor","borderColor","App","setCountires","setCountry","countryInfo","setCountryInfo","tableData","setTableData","name","iso2","getCountriesData","onCountryChange","e","countryCode","target","url","FormControl","Select","variant","onChange","MenuItem","todayCases","todayRecovered","recovered","todayDeaths","deaths","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d593f87a.chunk.js","sourcesContent":["import React from 'react';\nimport \"./InfoBox.css\";\nimport { Card, CardContent, Typography } from '@material-ui/core';\n\n\n function InfoBox({ title, cases, total}) {\n    return (\n        <Card className=\"infoBox\">\n            <CardContent>\n            {/* Title */}\n            <Typography className=\"infoBox__title\" color=\"textSecondary\">{title}</Typography>\n            {/* +120k number of cases */}\n            <h2 className=\"infoBox__cases\">{cases}</h2>\n            {/* 1.2M Total */}\n            <Typography className=\"infoBox__total\" color=\"textSecondary\">\n            {total} Total\n            </Typography>\n\n                \n            </CardContent>\n        </Card>\n    )\n}\nexport default InfoBox;\n","import React from 'react'\n\nexport default function Map() {\n    return (\n        <div className=\"map\">\n        <h1>I am a map</h1>\n            \n        </div>\n    )\n}\n","import React from 'react'\nimport \"./Table.css\";\n\nfunction Table({ countries}) {\n    return (\n        <div className=\"table\">\n         {countries.map(({country, cases}) =>(\n             <tr>\n                 <td>{country}</td>\n                 <td><strong>{cases}</strong></td>\n             </tr>\n         ))}\n            \n        </div>\n    )\n}\n\nexport default Table\n","export const sortData = (data) => {\n    let sortedData = [...data];\n\n    sortedData.sort((a, b) => {\n        if(a.cases > b.cases){\n            return -1;\n        } else {\n            return 1;\n        }\n    })\n    return sortedData;\n};\n","import React, { useState, useEffect } from \"react\";\nimport \"./LineGraph.css\";\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\n\nconst options = {\n    legend: {\n        display: false,\n      },\n      elements: {\n        point: {\n          radius: 0,\n        },\n        maintainAspectRatio: false,\n        tooltips: {\n            mode: \"index\",\n            intersect: false,\n            callbacks: {\n            label: function (tooltipItem, data) {\n                return numeral(tooltipItem.value).format(\"+0,0\");\n            },\n            },\n        },\n        scales: {\n            xAxes: [\n              {\n                type: \"time\",\n                time: {\n                  format: \"MM/DD/YY\",\n                  tooltipFormat: \"ll\",\n                },\n              },\n            ],\n            yAxes: [\n              {\n                gridLines: {\n                  display: false,\n                },\n                ticks: {\n                  // Include a dollar sign in the ticks\n                  callback: function (value, index, values) {\n                    return numeral(value).format(\"0a\");\n                  },\n                },\n              },\n            ],\n          }\n        },\n    };\n\n  \n\n    \nfunction LineGraph(casesType) {\n    const [data, setData] = useState({});\n    //https://disease.sh/v3/covid-19/historical/all?lastdays=120\n    const buildChartData = (data, casesType=\"cases\") => {\n        let chartData = [];\n        let lastDataPoint;\n        for (let date in data.cases) {\n          if (lastDataPoint) {\n            let newDataPoint = {\n              x: date,\n              y: data[casesType][date] - lastDataPoint,\n            };\n            chartData.push(newDataPoint);\n          }\n          lastDataPoint = data[casesType][date];\n        }\n        return chartData;\n      };\n   \n      useEffect(() => {\n        const fetchData = async () => {\n          await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\n            .then((response) => {\n              return response.json();\n            })\n            .then((data) => {\n              let chartData = buildChartData(data, \"cases\");\n              setData(chartData);\n              console.log(chartData);\n              // buildChart(chartData);\n            });\n        };\n    \n        fetchData();\n      }, []);\n    return (\n        <div>\n      {data?.length > 0 && (\n        <Line\n          data={{\n            datasets: [\n              {\n                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n                borderColor: \"#CC1034\",\n                data: data,\n              },\n            ],\n          }}\n          options={options}\n        />\n      )}\n    </div>\n    );\n}\n\nexport default LineGraph;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { MenuItem, FormControl, Select, Card, CardContent} from '@material-ui/core';\nimport InfoBox from \"./InfoBox\";\nimport Map from \"./Map\";\nimport Table from \"./Table\";\nimport { sortData} from \"./util\";\nimport LineGraph from \"./LineGraph\";\nfunction App() {\n  const [countries, setCountires] = useState([]);\n  const [country, setCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n    .then(response => response.json())\n    .then(data => {\n      setCountryInfo(data);\n    });\n  },[])\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n      .then((response) => response.json())\n      .then((data) =>{\n        const countries = data.map((country) => (\n          {\n            name: country.country,            // United States, United Kingdom\n            value: country.countryInfo.iso2, //UK, US, FR\n          }));\n          let sortedData = sortData(data);\n          setTableData(sortedData);\n          setCountires(countries);\n      })\n    }\n    getCountriesData();\n  }, [])\n  const onCountryChange = async (e) => {\n    const countryCode = e.target.value;\n    // console.log('Yoooo  >>>', countryCode)\n    \n\n    const url = countryCode === \"worldwide\"\n     ? \"https://disease.sh/v3/covid-19/all\"\n     :`https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n     await fetch(url)\n     .then(response => response.json())\n     .then(data => {\n      setCountry(countryCode); //All of the data \n      setCountryInfo(data) //from the country response\n     })\n  }\n  console.log(\"COUNTRY INFO >>>\", countryInfo)\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n      <div className=\"app__header\">\n        <h1>COVID-19 TRACKER</h1>\n        <FormControl className=\"app__dropdown\">\n        <Select\n              variant=\"outlined\"\n              value={country}\n              onChange={onCountryChange}\n            >\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n        </FormControl>\n        </div>\n        <div className=\"app__stats\">\n          <InfoBox\n           title=\"Corona virus cases\"\n            cases={countryInfo.todayCases} \n            total={countryInfo.cases}/>\n          <InfoBox \n          title=\"Recovered\" \n          cases={countryInfo.todayRecovered} \n          total={countryInfo.recovered}\n          />\n          <InfoBox \n          title=\"Deaths\" \n          cases={countryInfo.todayDeaths} \n          total={countryInfo.deaths}/>\n        </div>\n        <Map />\n      </div>\n      <Card className=\"app_right\">\n      <CardContent>\n        <h3>Live cases by country</h3>\n        <Table countries={tableData} />\n        <h3>Worldwide new cases</h3>\n        <LineGraph casesType={'cases'} />\n\n      </CardContent>\n      </Card>\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}